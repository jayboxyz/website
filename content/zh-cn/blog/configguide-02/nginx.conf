user  nginx;  # 指定nginx的运行用户为nginx
worker_processes  8;
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;

error_log  logs/error.log info;

#pid        logs/nginx.pid;

worker_rlimit_nofile 65535;  ## nginx进程可以打开的最大文件句柄数的上限
events {
	use epoll;
    worker_connections  65240;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    underscores_in_headers on;
    server_tokens off;
    ssi off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log logs/access.log main;
    
    autoindex off;
    port_in_redirect off;

    keepalive_timeout  125;
    client_header_timeout 125;
    client_body_timeout 125;

    fastcgi_buffer_size 1024k;
    fastcgi_buffers 8 1024k;
    fastcgi_busy_buffers_size 1024k;

    proxy_buffer_size 1024k;
    proxy_buffers 32 128k;
    proxy_busy_buffers_size 1024k;

    proxy_temp_file_write_size 2048k;

   client_header_buffer_size 128k;
   large_client_header_buffers 32 64k;

	
   upstream gotoaa {
		ip_hash;
		server host1.example.com:9090 weight=1;    ##更改为coordinator的IP和端口
		server host2.example.com:9090 weight=1;    ##更改为coordinator的IP和端口， 多个可新增
	        check interval=3000 rise=2 fall=5 timeout=1000 type=http; 

	}
	
	
    server {
        listen       443 ssl default_server;
        server_name   host4.example.com;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; 
		
         ## 证书和秘钥从被代理的openLooKeng集群中的keystore文件中提取
		ssl_certificate /usr/local/openresty/nginx/ssls/148/client.cer;   # 证书,路径必须是nginx用户可读取的路径
		ssl_certificate_key /usr/local/openresty/nginx/ssls/148/lk.key;  #秘钥,路径必须是nginx用户可读取的路径
		ssl_session_timeout 5m;  # 超时时间5分钟，避免攻击者建立大量无效链接或慢速攻击
		ssl_session_cache shared:SSL:10m;  #使用10M共享内存，ssl会话缓存，可以使客户端在一定时间内复用这个ssl会话，减少资源占用；
		ssl_protocols TLSv1.2 TLSv1.3;   
		ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256";
		##ssl_ciphers ALL:!aNULL; 
		ssl_prefer_server_ciphers on;   # 协商时优先使用服务器指定的加密算法
	
		client_header_buffer_size 64k;
	        large_client_header_buffers 8 64k;
        	client_body_buffer_size 64k;
	        client_max_body_size 1m;
		
		add_header X-XSS-Protection "1; mode=block";   #提供xss防护功能
		add_header X-Frame-Options DENY;	# 提供点击劫持防护功能
		add_header X-Content-Type-Options nosniff;	# 提供禁用浏览器的类型猜测功能
		add_header Strict-Transport-Security " max-age=31536000; includeSubDomains "; 	#启用HSTS功能，强制走HTTPS
		add_header Content-Security-Policy "default-src 'self'";	#提供对加载资源的安全控制功能
		add_header Cache-control "no-cache, no-store, must-revalidate";  #以下三个是页面缓存控制响应头，涉及敏感数据的页面必须设置
		add_header Pragma no-cache;
		add_header Expires 0;

      location / {
			proxy_hide_header X-Powered-By;
			proxy_pass https://gotoaa;
			proxy_set_header Host $host:$server_port;
			proxy_set_header X-Real-IP $remote_addr;
        }



			
        #error_page  404              /404.html;
        error_page   500 502 503 504  /50x.html;
       # location = /50x.html {
       #     root   html;
       # }
    }

}
